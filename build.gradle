plugins {
    // Asciidoctor
    id "org.asciidoctor.jvm.convert" version "3.3.2"

    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.sedin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    // Devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Database
    runtimeOnly 'com.h2database:h2'

    // Jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5',
            'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Asciidoctor Extension
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.6.RELEASE'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.6.RELEASE'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn(test)
}

asciidoctor.doFirst {
    delete 'src/main/resources/static/docs'
}

task copyDocument(type: Copy) {
    from layout.buildDirectory.dir("docs/asciidoc")
    include "*.html"
    into layout.projectDirectory.dir("src/main/resources/static/docs")

    dependsOn(asciidoctor)
}

build {
    dependsOn(copyDocument)
}

javadoc {
    source = sourceSets.main.java.srcDirs
    options.encoding = 'UTF-8'
}

jar {
    enabled = false
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into "BOOT-INF/classes/static/docs"
    }
}
