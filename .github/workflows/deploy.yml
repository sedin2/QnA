name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    environment: production

    steps:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    # 테스트용 Properties 생성 & 작성
    - name: Create Test-Properties
      run: touch ./src/main/resources/application-test.properties

    - name: Write Test-Properties
      run: echo "${{ secrets.TEST_PROPERTIES }}" > ./src/main/resources/application-test.properties

    # 로컬 서버용 Properties 생성 & 작성
    - name: Create Local-Properties
      run: touch ./src/main/resources/application-local.properties

    - name: Write Local-Properties
      run: echo "${{ secrets.LOCAL_PROPERTIES }}" > ./src/main/resources/application-local.properties

    # 개발 서버용 Properties 생성 & 작성
    - name: Create Dev-Properties
      run: touch ./src/main/resources/application-dev.properties

    - name: Write Dev-Properties
      run: echo "${{ secrets.DEV_PROPERTIES }}" > ./src/main/resources/application-dev.properties

    # 운영 서버용 Properties 생성 & 작성
    - name: Create Production-Properties
      run: touch ./src/main/resources/application-production.properties

    - name: Write Production-Properties
      run: echo "${{ secrets.PRODUCTION_PROPERTIES }}" > ./src/main/resources/application-production.properties

    # (2) JDK 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    # (3) Gradle build
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      run: ./gradlew clean build

    # (4) Docker 빌드 셋업
    - name: Docker Build Setup
      uses: docker/setup-buildx-action@v1

    # (5) DockerHub 로그인
    - name: DockerHub 로그인
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # (6) 웹 이미지 빌드 및 도커허브에 푸쉬
    - name: Docker Image Build And Push At DockerHub
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:web .
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:web

    # (7) Login EC2 And Docker Compose Up
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.AWS_EC2_PEM_KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:web
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:nginx
          sudo docker-compose up -d
          sudo docker image prune -f
